-- MySQL Script generated by MySQL Workbench
-- 12/01/15 15:02:39
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema scheduler
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema scheduler
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `scheduler` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `scheduler` ;

-- -----------------------------------------------------
-- Table `scheduler`.`tbl_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `scheduler`.`tbl_roles` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  `description` VARCHAR(255) NOT NULL COMMENT '',
  `privilege` VARCHAR(255) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `scheduler`.`tbl_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `scheduler`.`tbl_users` (
  `username` VARCHAR(24) NOT NULL COMMENT '',
  `password` VARCHAR(24) NOT NULL COMMENT '',
  `first_name` VARCHAR(45) NOT NULL COMMENT '',
  `last_name` VARCHAR(45) NOT NULL COMMENT '',
  `role_id` INT NOT NULL COMMENT '',
  `mail` VARCHAR(45) NULL COMMENT '',
  `manager` VARCHAR(24) NULL COMMENT '',
  `last_updated_date` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`username`)  COMMENT '',
  INDEX `FK_updated_by_idx` (`manager` ASC)  COMMENT '',
  INDEX `FK_role_id_idx` (`role_id` ASC)  COMMENT '',
  CONSTRAINT `FK_users_updated_by`
    FOREIGN KEY (`manager`)
    REFERENCES `scheduler`.`tbl_users` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `scheduler`.`tbl_roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `scheduler`.`tbl_resc_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `scheduler`.`tbl_resc_type` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT 'The resource types can be conference room, Internet, project, screen and so on.',
  `description` VARCHAR(255) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `scheduler`.`tbl_resources`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `scheduler`.`tbl_resources` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `type_id` INT NOT NULL COMMENT '',
  `last_updated_by` VARCHAR(24) NOT NULL COMMENT '',
  `last_updated_date` DATETIME NOT NULL COMMENT '',
  `parent_resource_id` INT NULL COMMENT '',
  `root_parent_resource_id` INT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `FK_updated_by_idx` (`last_updated_by` ASC)  COMMENT '',
  INDEX `FK_parent_id_idx` (`parent_resource_id` ASC)  COMMENT '',
  INDEX `FK_type_idx` (`type_id` ASC)  COMMENT '',
  INDEX `fk_tbl_resources_tbl_resources1_idx` (`root_parent_resource_id` ASC)  COMMENT '',
  CONSTRAINT `FK_resc_updated_by`
    FOREIGN KEY (`last_updated_by`)
    REFERENCES `scheduler`.`tbl_users` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_parent`
    FOREIGN KEY (`parent_resource_id`)
    REFERENCES `scheduler`.`tbl_resources` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_type`
    FOREIGN KEY (`type_id`)
    REFERENCES `scheduler`.`tbl_resc_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_resources_tbl_resources1`
    FOREIGN KEY (`root_parent_resource_id`)
    REFERENCES `scheduler`.`tbl_resources` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `scheduler`.`tbl_resc_traits`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `scheduler`.`tbl_resc_traits` (
  `resc_id` INT NOT NULL COMMENT '',
  `key` VARCHAR(45) NOT NULL COMMENT '',
  `value` VARCHAR(225) NOT NULL COMMENT '',
  INDEX `FK_resc_id_idx` (`resc_id` ASC)  COMMENT '',
  PRIMARY KEY (`resc_id`, `key`)  COMMENT '',
  CONSTRAINT `FK_resc_id`
    FOREIGN KEY (`resc_id`)
    REFERENCES `scheduler`.`tbl_resources` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `scheduler`.`tbl_resv_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `scheduler`.`tbl_resv_status` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(15) NOT NULL COMMENT 'The status options can be \"Reserved\", \"Waiting\", \"Cancelled\" and so on.',
  `description` VARCHAR(255) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `scheduler`.`tbl_reservations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `scheduler`.`tbl_reservations` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `tbl_resources_id` INT NOT NULL COMMENT '',
  `from_datetime` DATETIME NOT NULL COMMENT 'Constraint should be applied to guarantee that from date time is earlier than to date time.\n\nRecurring reservation should be converted by either the web part or the DB from a recurrance to a series of reservation records.',
  `to_datetime` DATETIME NOT NULL COMMENT '',
  `status` INT NULL COMMENT '',
  `reserved_by` VARCHAR(24) NOT NULL COMMENT '',
  `reserved_date` DATETIME NULL COMMENT '',
  `remarks` VARCHAR(255) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `FK_booked_by_idx` (`reserved_by` ASC)  COMMENT '',
  INDEX `FK_status_idx` (`status` ASC)  COMMENT '',
  INDEX `fk_tbl_reservations_tbl_resources1_idx` (`tbl_resources_id` ASC)  COMMENT '',
  CONSTRAINT `FK_booked_by`
    FOREIGN KEY (`reserved_by`)
    REFERENCES `scheduler`.`tbl_users` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_status`
    FOREIGN KEY (`status`)
    REFERENCES `scheduler`.`tbl_resv_status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_reservations_tbl_resources1`
    FOREIGN KEY (`tbl_resources_id`)
    REFERENCES `scheduler`.`tbl_resources` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
KEY_BLOCK_SIZE = 1;


-- -----------------------------------------------------
-- Table `scheduler`.`tbl_buildings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `scheduler`.`tbl_buildings` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `abbreviation` VARCHAR(4) NOT NULL COMMENT '',
  `name` VARCHAR(50) NOT NULL COMMENT '',
  `address1` VARCHAR(50) NOT NULL COMMENT '',
  `address2` VARCHAR(50) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `scheduler`.`tbl_room_locations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `scheduler`.`tbl_room_locations` (
  `tbl_buildings_id` INT NOT NULL COMMENT '',
  `room` VARCHAR(10) NOT NULL COMMENT '',
  `tbl_resources_id` INT NOT NULL COMMENT '',
  INDEX `fk__tbl_resources1_idx` (`tbl_resources_id` ASC)  COMMENT '',
  PRIMARY KEY (`tbl_buildings_id`, `room`)  COMMENT '',
  UNIQUE INDEX `tbl_resources_id_UNIQUE` (`tbl_resources_id` ASC)  COMMENT '',
  CONSTRAINT `fk__tbl_resources1`
    FOREIGN KEY (`tbl_resources_id`)
    REFERENCES `scheduler`.`tbl_resources` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_room_locations_tbl_buildings1`
    FOREIGN KEY (`tbl_buildings_id`)
    REFERENCES `scheduler`.`tbl_buildings` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `scheduler`.`tbl_reviews`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `scheduler`.`tbl_reviews` (
  `id` INT NOT NULL COMMENT '',
  `rating` INT NOT NULL COMMENT '',
  `comments` VARCHAR(500) NULL COMMENT '',
  `created_on` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `scheduler`.`tbl_resources_to_reviews`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `scheduler`.`tbl_resources_to_reviews` (
  `tbl_resources_id` INT NOT NULL COMMENT '',
  `tbl_reviews_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`tbl_resources_id`, `tbl_reviews_id`)  COMMENT '',
  INDEX `fk_tbl_reviews_has_tbl_resources_tbl_resources1_idx` (`tbl_resources_id` ASC)  COMMENT '',
  INDEX `fk_tbl_reviews_has_tbl_resources_tbl_reviews1_idx` (`tbl_reviews_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_reviews_has_tbl_resources_tbl_reviews1`
    FOREIGN KEY (`tbl_reviews_id`)
    REFERENCES `scheduler`.`tbl_reviews` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_reviews_has_tbl_resources_tbl_resources1`
    FOREIGN KEY (`tbl_resources_id`)
    REFERENCES `scheduler`.`tbl_resources` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
